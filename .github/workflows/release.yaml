---
name: Release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.release-please.outputs.id }}
      release_created: ${{ steps.release-please.outputs.release_created }}
      sha: ${{ steps.release-please.outputs.sha }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      version: ${{ steps.release-please.outputs.version }}
    steps:
      - name: Get app token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_PLEASE_ID }}
          private-key: ${{ secrets.RELEASE_PLEASE_KEY }}

      - name: Run Release Please
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release-please
        with:
          token: ${{ steps.app-token.outputs.token }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  container:
    name: Build and publish container
    needs: ["release-please"]
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    env:
      IMAGE: ghcr.io/karelvanhecke/kubelet-serving-approver
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Setup cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        with:
          cosign-release: v2.5.0

      - name: Login to GitHub registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        id: build
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          tags: ${{ env.IMAGE }}:v${{ needs.release-please.outputs.version }}
          provenance: false
          push: true

      - name: Sign container
        run: cosign sign --yes ${{ env.IMAGE }}@${{ steps.build.outputs.digest }}

  manifests:
    name: Generate and publish manifests
    runs-on: ubuntu-latest
    needs: ["release-please","container"]
    permissions:
      packages: write
      id-token: write
    env:
      MANIFEST: ghcr.io/karelvanhecke/manifests/kubelet-serving-approver
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup flux
        uses: fluxcd/flux2@8d5f40dca5aa5d3c0fc3414457dda15a0ac92fa4 # v2.5.1
        with:
          version: 2.5.1

      - name: Setup cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        with:
          cosign-release: v2.5.0

      - name: Login to GitHub registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate manifests
        run: tools/release/generate_manifests.sh v${{ needs.release-please.outputs.version }}

      - name: Upload manifest to release artifacts
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ needs.release-please.outputs.id }}/assets?name=kubelet-serving-approver.yaml" \
          --data-binary "@manifests/release.yaml"

      - name: Push manifest to OCI registry
        id: manifest
        run: |
          DIGEST=$(flux push artifact oci://${{ env.MANIFEST }}v${{ needs.release-please.outputs.version }} \
          --path="manifests/release.yaml" \
          --source="${{ github.repositoryUrl }}" \
          --revision="${{ needs.release-please.outputs.tag_name }}@sha1:${{ needs.release-please.outputs.sha }}" \
          -o json | jq -r .digest)
          echo "digest=${DIGEST}" >> "$GITHUB_OUTPUT"

      - name: Sign manifest
        run: cosign sign --yes ${{ env.MANIFEST }}@${{ steps.manifest.outputs.digest }}

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: ["release-please","container","manifests"]
    permissions:
      contents: write
    steps:
      - name: Publish release
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          ${{ github.api_url }}/repos/${{ github.repository }}/releases/${{ needs.release-please.outputs.id }} \
          -d '{"draft": false}'
