name: Continuous integration
on:
  pull_request:
    branches: ["main"]

jobs:
  check-changes:
    name: Check changes
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.changes.outputs.go }}
      deps: ${{ steps.changes.outputs.deps }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check changes
        id: changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: |
            go:
              - '*.go'
              - 'go.mod'
              - 'go.sum'
              - '**/*.go'
            deps:
              - 'go.mod'
              - '.github/workflows/*'

  golangci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.go == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.3
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.1.6

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.go == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.3
      - name: Run tests
        run: go test github.com/karelvanhecke/kubelet-serving-approver/...

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.go == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.3
      - name: Setup Kind
        env:
          KIND_VERSION: v0.28.0
        run: go install sigs.k8s.io/kind@${KIND_VERSION}
      - name: Setup kubectl
        env:
          KUBECTL_VERSION: v1.32.5
          KUBECTL_PATH: /usr/local/bin/kubectl
        run: |
          curl -s -L https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl | sudo tee $KUBECTL_PATH >/dev/null
          sha256sum $KUBECTL_PATH | grep -w $(curl -s -L https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) >/dev/null
          sudo chmod +x $KUBECTL_PATH
      - name: Run integration tests
        run: tests/integration-tests.sh

  dependency-review:
    name: Dependency review
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.deps == 'true' }}
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Review dependencies
        uses: actions/dependency-review-action@da24556b548a50705dd671f47852072ea4c105d9 # v4.7.1
        with:
          comment-summary-in-pr: always

  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.go == 'true' }}
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.3

      - name: Init
        uses: github/codeql-action/init@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17
        with:
          languages: go
          build-mode: autobuild
          dependency-caching: true

      - name: Analyze
        uses: github/codeql-action/analyze@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17

  osv-scanner:
    name: OSV-scanner
    runs-on: ubuntu-latest
    needs: ["check-changes"]
    if: ${{ needs.check-changes.outputs.go == 'true' }}
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Checkout target branch
        run: |
          git checkout $GITHUB_BASE_REF
          git submodule update --recursive
      - name: Run scanner on existing code
        uses: google/osv-scanner-action/osv-scanner-action@8dded7155905cd666190a12dc9997000e58d163d # v2.0.2
        continue-on-error: true
        with:
          scan-args: |-
            --format=json
            --output=old-results.json
            -r
            ./
      - name: Checkout current branch
        run: |
          git checkout -f $GITHUB_SHA
          git submodule update --recursive
      - name: Run scanner on new code
        uses: google/osv-scanner-action/osv-scanner-action@8dded7155905cd666190a12dc9997000e58d163d # v2.0.2
        with:
          scan-args: |-
            --format=json
            --output=new-results.json
            -r
            ./
        continue-on-error: true
      - name: Run osv-scanner-reporter
        uses: google/osv-scanner-action/osv-reporter-action@8dded7155905cd666190a12dc9997000e58d163d # v2.0.2
        with:
          scan-args: |-
            --output=results.sarif
            --old=old-results.json
            --new=new-results.json
            --gh-annotations=true
            --fail-on-vuln=true
      - name: Upload to code-scanning
        id: upload_artifact
        if: ${{ !cancelled() }}
        uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3.28.15
        with:
          sarif_file: results.sarif
      - name: Error troubleshooter
        if: ${{ always() && steps.upload_artifact.outcome == 'failure' }}
        run: |
          echo "::error::Artifact upload failed. This is most likely caused by a error during scanning earlier in the workflow."
